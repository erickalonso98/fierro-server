<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Exploitation;

class ExploitationController extends Controller
{

    public function __construct(){
        $this->middleware('api.auth',['except' => ['index','show']]);
    }

    public function index(){
        $exploitations = Exploitation::all();

        $data = [
            'status'         => 'success',
            'code'           => 200,
            'exploitations'  => $exploitations
        ];

        return response()->json($data,$data['code']);
    }

    public function show($id){
        $exploitation = Exploitation::find($id);

        if(is_object($exploitation)){
            $data = [
                'status'      => 'success',
                'code'        => 200,
                'explotation' => $exploitation
            ];
        }else{
            $data = [
                'status'  => 'error',
                'code'    => 404,
                'message' => 'No se encuentra el tipo de explotacion del predial'
            ];
        }

        return response()->json($data,$data['code']);
    }

    public function store(Request $request){
        $json = $request->input('json',null);
        $params_array = json_decode($json,true);

        $validator = \Validator::make($params_array,[
            'name' => 'required'
        ]);

        if($validator->fails()){
            $data = [
                'status'  => 'error',
                'code'    => 400,
                'message' => 'error al registrar el tipo de explotacion de la tierra'
            ];
        }else{

            $exploitation = new Exploitation();
            $exploitation->name = $params_array['name'];
            $exploitation->save();

            $data = [
                'status'   => 'success',
                'code'     => 200,
                'exploitation' => $exploitation
            ];
        }

        return response()->json($data,$data['code']);
    }

    public function update(Request $request, $id){
        $json = $request->input('json',null);
        $params_array = json_decode($json,true);

        if(!empty($params_array)){

            $validator = \Validator::make($params_array,[
                'name' => 'required'
            ]);

             //quitar lo que no se va actualizar
             unset($params_array['id']);
             unset($params_array['created_at']);

            if($validator->fails()){
                $data = [
                    'status'  => 'error',
                    'code'    => 400,
                    'message' => 'Datos no actualizados correctamente'
                ];
            }else{

                $exploitation = Exploitation::where('id',$id)->update($params_array);

                $data = [
                    'status'       => 'success',
                    'code'         => 200,
                    'exploitation' => $exploitation,
                    'changes'      => $params_array
                ];
            }

        }else{
            $data = [
                'status'  => 'error',
                'code'    => 404,
                'message' => 'no hay datos que actualizar'
            ];
        }

        return response()->json($data,$data['code']);
    }

    public function destroy($id){

        $exploitation = Exploitation::find($id);

        if(is_object($exploitation)){

            $exploitation->delete();

            $data = [
                'status'       => 'error',
                'code'         => 200,
                'exploitation' => $exploitation
            ];

        }else{
            $data = [
                'status'  => 'error',
                'code'    => 400,
                'message' => 'no se puede eliminar el tipo de explotacion predial'
            ];
        }

        return response()->json($data,$data['code']);
    }
}
